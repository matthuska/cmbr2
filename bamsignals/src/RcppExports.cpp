// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// pileup_core
List pileup_core(RObject gr, std::string bampath, int mapqual = 0, int binsize = 1, int shift = 0, bool ss = false, int maxgap = 16385);
RcppExport SEXP bamsignals_pileup_core(SEXP grSEXP, SEXP bampathSEXP, SEXP mapqualSEXP, SEXP binsizeSEXP, SEXP shiftSEXP, SEXP ssSEXP, SEXP maxgapSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< RObject >::type gr(grSEXP );
        Rcpp::traits::input_parameter< std::string >::type bampath(bampathSEXP );
        Rcpp::traits::input_parameter< int >::type mapqual(mapqualSEXP );
        Rcpp::traits::input_parameter< int >::type binsize(binsizeSEXP );
        Rcpp::traits::input_parameter< int >::type shift(shiftSEXP );
        Rcpp::traits::input_parameter< bool >::type ss(ssSEXP );
        Rcpp::traits::input_parameter< int >::type maxgap(maxgapSEXP );
        List __result = pileup_core(gr, bampath, mapqual, binsize, shift, ss, maxgap);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// coverage_core
List coverage_core(RObject gr, std::string bampath, int mapqual = 0, int maxgap = 16385);
RcppExport SEXP bamsignals_coverage_core(SEXP grSEXP, SEXP bampathSEXP, SEXP mapqualSEXP, SEXP maxgapSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< RObject >::type gr(grSEXP );
        Rcpp::traits::input_parameter< std::string >::type bampath(bampathSEXP );
        Rcpp::traits::input_parameter< int >::type mapqual(mapqualSEXP );
        Rcpp::traits::input_parameter< int >::type maxgap(maxgapSEXP );
        List __result = coverage_core(gr, bampath, mapqual, maxgap);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
